add_newline = false

format = """
$username\
$directory\
$git_branch\
$custom\
$git_status\
$rust\
$golang\
$nodejs\
$java\
$time\
$line_break$character
"""

[git_status]
disabled = true
style = "purple bold"
staged = "âœ”"
modified = "!"
untracked = "+"
conflicted = "âœ–"

[git_branch]
only_attached = true
format = '[$symbol$branch(:$remote_branch)]($style) '

[golang]
format = '[î˜§ $version](bold cyan) '

[docker_context]
symbol = "ïŒˆ"
style = "bold blue"

[kubernetes]
symbol = 'â˜¸ '
disabled = true
detect_files = ['Dockerfile']
format = '[$symbol$context( \($namespace\))]($style) '

[custom.jj]
description = 'Current jj status'
symbol = "î‚  "
command = '''
jj root > /dev/null \
  && jj log --revisions "@" --no-pager --no-graph \
     --color always --limit 1 --template '
  separate(" ",
    change_id.shortest(4),
    bookmarks,
    concat(
      if(conflict, "ðŸ’¥"),
      if(divergent, "ðŸš§"),
      if(hidden, "ðŸ‘»"),
      if(immutable, "ðŸ”’"),
    ),
    if(empty,
      raw_escape_sequence("\x1b[1;33m") ++ "(empty)" ++ raw_escape_sequence("\x1b[0m"),
      ""
    ),
    raw_escape_sequence("\x1b[1;33m") ++
      if(description.first_line().len() == 0,
        "(no desc)",
        if(description.first_line().len() <= 29,
          description.first_line(),
          description.first_line().substr(0, 29) ++ "â€¦"
        )
      )
    ++ raw_escape_sequence("\x1b[0m")
  )' \
  | sed -E 's@([^[:space:]]*/)([^[:space:]]+)@\\x1b[0;35m\2\x1b[0m@g
'
'''
format = '[$symbol$output]($style) '
style = "purple bold"
when = 'test -d .jj'
ignore_timeout = true
