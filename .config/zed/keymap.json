[
  // Window's navigation
  {
    "context": "Dock || Terminal || Editor",
    "bindings": {
      // Window's motions
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "space q p": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "AgentPanel",
    "bindings": {
      "space q p": "workspace::ToggleRightDock"
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      // Open file finder
      "space space": "file_finder::Toggle",
      // New file
      "space f n": "workspace::NewFile",
      // Open recent project
      "space f p": "projects::OpenRecent",
      // Search in all the files
      "space s g": "workspace::NewSearch",
      // File explorer
      "space e": "workspace::ToggleLeftDock",
      // Terminal
      "space t": "workspace::ToggleBottomDock",
      // Ai
      "space a": "workspace::ToggleRightDock",
      // Quit zed
      "space q q": "workspace::CloseWindow",
      // Git
      "space g g": [
        "task::Spawn",
        {
          "task_name": "lazygit",
          "reveal_target": "center"
        }
      ]
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      // Close project panel as project file panel on the right
      "q": "workspace::ToggleLeftDock",
      "space e": "workspace::ToggleLeftDock",
      ":": "command_palette::Toggle",
      "%": "project_panel::NewFile",
      "/": "project_panel::NewSearchInDirectory",
      "enter": "project_panel::OpenPermanent",
      "escape": "project_panel::ToggleFocus",
      "h": "project_panel::CollapseSelectedEntry",
      "j": "menu::SelectNext",
      "k": "menu::SelectPrevious",
      "l": "project_panel::ExpandSelectedEntry",
      "o": "project_panel::OpenPermanent",
      "shift-d": "project_panel::Delete",
      "shift-r": "project_panel::Rename",
      "shift-g": "menu::SelectLast",
      "g g": "menu::SelectFirst",
      "-": "project_panel::SelectParent",
      "shift-c": "project_panel::CollapseAllEntries",
      "shift-o": "project_panel::RevealInFileManager"
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      // Redo
      "shift-u": "editor::Redo",
      // Save
      "ctrl-s": "workspace::Save",
      // Chat with AI
      "space a a": "agent::ToggleFocus",
      "space a i": "assistant::InlineAssist",
      // Git
      "space g g": [
        "task::Spawn",
        {
          "task_name": "lazygit",
          "reveal_target": "center"
        }
      ],
      "space g d": "editor::ExpandAllDiffHunks",
      "space g D": "git::Diff",
      "space g r": "git::Restore",
      "space g R": "git::RestoreFile",
      "space g b": "git::CheckoutBranch",
      "space g B": "git::Blame",
      "space g p": "git::Pull",
      "space g f": "git::Fetch",
      // Toggle inlay hints
      "space u i": "editor::ToggleInlayHints",
      // Toggle inline diagnostics
      "space u d": "editor::ToggleInlineDiagnostics",
      // Toggle soft wrap
      "space u w": "editor::ToggleSoftWrap",
      // Open recent project
      "space f p": "projects::OpenRecent",
      // Search word under cursor in current pane
      "space s w": "buffer_search::Deploy",
      // Search word under cursor in all panes
      "space s W": "pane::DeploySearch",
      // Jump to the previous location
      "space b b": "pane::AlternateFile",
      // Close buffer
      "space b d": "pane::CloseActiveItem",
      // Close inactive buffers
      "space b q": "pane::CloseInactiveItems",
      // Search in the current buffer
      "space s b": "vim::Search",
      // Search in all the files
      "space s g": "workspace::NewSearch",
      // LSP & Code actions
      "space c a": "editor::ToggleCodeActions",
      "space s d": "diagnostics::Deploy",
      "space s s": "outline::Toggle",
      // Format
      "space c f": "editor::Format",
      // File explorer
      "space e": "workspace::ToggleLeftDock",
      // Telescope
      "space f f": "file_finder::Toggle",
      "space space": "file_finder::Toggle",
      // Quit zed
      "space q q": "workspace::CloseWindow",
      // Terminal
      "space t": "workspace::ToggleBottomDock",
      // Windows management
      "space w s": "pane::SplitDown",
      "space w v": "pane::SplitRight",
      "space w d": "pane::CloseAllItems",
      // Buffer navigation
      "shift-h": "pane::ActivatePreviousItem",
      "shift-l": "pane::ActivateNextItem",
      // Open markdown preview
      "space m p": "markdown::OpenPreview",
      "space m P": "markdown::OpenPreviewToTheSide",
      // Reveal in Finder
      "space f r": "editor::RevealInFileManager"
    }
  },
  {
    "context": "MarkdownPreview",
    "bindings": {
      // Buffer navigation
      "shift-h": "pane::ActivatePreviousItem",
      "shift-l": "pane::ActivateNextItem",
      // Close buffer
      "space b d": "pane::CloseActiveItem"
    }
  },
  {
    "context": "(Editor && (showing_code_actions || showing_completions))",
    "bindings": {
      "ctrl-k": "editor::ContextMenuPrevious",
      "ctrl-j": "editor::ContextMenuNext"
    }
  },
  {
    "context": "Editor && edit_prediction",
    "bindings": {
      "alt-tab": null,
      "alt-p": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "Editor && edit_prediction_conflict",
    "bindings": {
      // bind the same key here too
      "alt-p": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !VimObject",
    "bindings": {
      // Line's Motions
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "j j": ["workspace::SendKeystrokes", "escape"]
    }
  },
  {
    "context": "vim_mode == normal || vim_mode == visual",
    "bindings": {
      "s": "vim::PushSneak",
      "S": "vim::PushSneakBackward",
      "space c d": "editor::DuplicateLineDown",
      "space c u": "editor::DuplicateLineDown"
    }
  },
  {
    "context": "vim_operator == a || vim_operator == i || vim_operator == cs",
    "bindings": {
      "b": "vim::AnyBrackets"
    }
  },
  {
    "context": "vim_mode == visual",
    "bindings": {
      "shift-s": ["vim::PushAddSurrounds", {}]
    }
  }
]
